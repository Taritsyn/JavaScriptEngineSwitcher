		/// <summary>
		/// Retrieves the IDispatch interface for the methods and properties associated
		/// with the currently running script
		/// </summary>
		/// <param name="itemName">The name of the item for which the caller needs the associated
		/// dispatch object. If this parameter is null, the dispatch object contains as its members
		/// all of the global methods and properties defined by the script. Through the
		/// IDispatch interface and the associated <see cref="ITypeInfo"/> interface, the host can
		/// invoke script methods or view and modify script variables.</param>
		/// <param name="dispatch">The object associated with the script's global methods and
		/// properties. If the scripting engine does not support such an object, null is returned.</param>
		void GetScriptDispatch(
			string itemName,
			out object dispatch
		);

		/// <summary>
		/// Retrieves the IDispatch interface for the methods and properties associated
		/// with the currently running script
		/// </summary>
		/// <param name="itemName">The name of the item for which the caller needs the associated
		/// dispatch object. If this parameter is null, the dispatch object contains as its members
		/// all of the global methods and properties defined by the script. Through the
		/// IDispatch interface and the associated <see cref="ITypeInfo"/> interface, the host can
		/// invoke script methods or view and modify script variables.</param>
		/// <param name="dispatch">The object associated with the script's global methods and
		/// properties. If the scripting engine does not support such an object, null is returned.</param>
		public void GetScriptDispatch(string itemName, out object dispatch)
		{
			_activeScript.GetScriptDispatch(itemName, out dispatch);
		}